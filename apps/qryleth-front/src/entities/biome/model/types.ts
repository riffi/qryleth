import type { Point2, Rect2D, Circle2D, BoundRect2D } from '@/shared/types'

/**
 * GfxBiome — доменная сущность биома сцены.
 *
 * Биом описывает:
 * - Область на плоскости XZ (вид сверху), где генерируются инстансы
 * - Правила источников (отбор объектов из библиотеки по тегам/типам)
 * - Параметры плотности и распределения (random/poisson, seed, minDistance)
 * - Поведение у краёв области (fade/bias)
 * - Случайные трансформации для инстансов (вращение/масштаб/смещения)
 */
export interface GfxBiome {
  /** Уникальный идентификатор биома */
  uuid: string
  /** Человекочитаемое имя биома */
  name: string
  /** Геометрия области действия биома */
  area: GfxBiomeArea
  /** Виден ли слой биома (для отладки/включения-выключения скаттеринга) */
  visible?: boolean
  /** Конфигурация скаттеринга: источники, плотность, распределение, края, seed */
  scattering: GfxBiomeScatteringConfig
}

/**
 * Область биома: набор поддерживаемых форм на плоскости XZ.
 *
 * Для простоты используем осевые формы с опциональным поворотом у прямоугольника
 * и произвольные многоугольники (список точек).
 */
export type GfxBiomeArea =
  | GfxBiomeRectArea
  | GfxBiomeCircleArea
  | GfxBiomePolygonArea

/**
 * Прямоугольная область биома.
 *
 * Использует осевой прямоугольник на XZ и опциональный поворот вокруг оси Y
 * (в градусах). Поворот применяется вокруг центра прямоугольника.
 */
export interface GfxBiomeRectArea {
  type: 'rect'
  /** Оси‑выровненный прямоугольник на XZ */
  rect: Rect2D
  /** Поворот области вокруг Y (градусы), по умолчанию 0 */
  rotationY?: number
}

/**
 * Круговая область биома.
 */
export interface GfxBiomeCircleArea {
  type: 'circle'
  circle: Circle2D
}

/**
 * Произвольная многоугольная область биома.
 *
 * Точки задаются в плоскости XZ. Для ускорения проверок может храниться
 * предвычислённый ограничивающий прямоугольник.
 */
export interface GfxBiomePolygonArea {
  type: 'polygon'
  /** Список вершин многоугольника [x, z] в порядке обхода */
  points: Point2[]
  /** Предвычисленный ограничивающий прямоугольник (опционально) */
  bounds?: BoundRect2D
}

/**
 * Настройки скаттеринга биома: отбор источников, плотность/распределение, края и рандомизация.
 */
export interface GfxBiomeScatteringConfig {
  /**
   * Отбор источников из библиотеки: по тегам/типам/явным UUID записей библиотеки.
   * Реализация может комбинировать фильтры и назначать веса.
   */
  sources: GfxBiomeSourceFilter

  /**
   * Плотность инстансов на площадь 100×100 единиц.
   *
   * Например, density=25 означает ~25 инстансов на квадрат 100×100.
   * При необходимости можно интерпретировать как «среднее ожидаемое».
   */
  densityPer100x100: number

  /**
   * Минимальное расстояние между сгенерированными точками (для blue-noise/poisson диспетчера).
   * При distribution='random' может игнорироваться или применяться как пост‑фильтр.
   */
  minDistance?: number

  /**
   * Алгоритм распределения точек в области биома.
   * - 'random' — равномерное случайное распределение
   * - 'poisson' — Poisson‑disk (blue noise), учитывает minDistance
   */
  distribution: 'random' | 'poisson'

  /**
   * Настройки поведения на границах области (зона затухания, bias к центру/краю и т.п.).
   */
  edge: GfxBiomeEdgeFalloff

  /**
   * Параметры случайных трансформаций для инстансов (вращение, масштаб, локальные смещения).
   */
  transform: GfxBiomePlacementTransform

  /**
   * Seed для детерминированной генерации.
   */
  seed?: number
}

/**
 * Фильтры источников объектов для скаттеринга биома.
 *
 * Биом выбирает объекты из библиотеки по:
 * - тегам (вхождение хотя бы одного/всех, исключение)
 * - типам примитивов (например, 'box'|'sphere' и т.д. в составе объекта)
 * - явному списку UUID записей библиотеки
 * А также позволяет назначать веса через UUID или тег.
 */
export interface GfxBiomeSourceFilter {
  /** Обязательные теги: объект должен содержать все эти теги */
  requiredTags?: string[]
  /** Достаточные теги: объект должен содержать хотя бы один из этих тегов */
  anyTags?: string[]
  /** Теги‑исключения: объект с такими тегами исключается из выборки */
  excludeTags?: string[]
  /** Явное включение записей библиотеки по их UUID (приоритетнее фильтров) */
  includeLibraryUuids?: string[]
  /** Веса для UUID записей библиотеки (усиливают шанс выбора конкретной записи) */
  weightsByLibraryUuid?: Record<string, number>
  /** Веса для тегов (повышают шанс объектов с указанными тегами) */
  weightsByTag?: Record<string, number>
}

/**
 * Поведение на краях области биома: fade и bias.
 *
 * - fadeWidth — ширина зоны затухания от границы внутрь области (в единицах сцены)
 * - fadeCurve — профиль затухания (линейный или плавный)
 * - edgeBias — смещение вероятности: -1 тянет к краям, +1 к центру, 0 без смещения
 */
export interface GfxBiomeEdgeFalloff {
  /** Ширина зоны затухания от границы внутрь области */
  fadeWidth: number
  /** Профиль затухания по краю */
  fadeCurve?: 'linear' | 'smoothstep'
  /** Смещение вероятности к центру (1) или краю (-1) */
  edgeBias?: number // -1..1
}

/**
 * Рандомизация трансформаций инстансов при размещении.
 */
export interface GfxBiomePlacementTransform {
  /** Случайное вращение вокруг Y: [min, max] в градусах. По умолчанию [0, 360] */
  randomYawDeg?: [number, number]
  /** Случайный масштаб: [min, max]. По умолчанию [1, 1] (без изменений) */
  randomUniformScale?: [number, number]
  /** Локальные случайные смещения по XZ в пределах указанного диапазона */
  randomOffsetXZ?: [number, number]
}
