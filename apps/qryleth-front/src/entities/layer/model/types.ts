import type { GfxTerrainConfig } from '../../terrain';

/**
 * Перечисление типов слоёв графической сцены.
 * Используется вместо строковых литералов для повышения типобезопасности
 * и единообразия использования по всему коду проекта.
 */
export enum GfxLayerType {
  /** Слой для обычных объектов сцены */
  Object = 'object',
  /** Слой ландшафта (террейна) */
  Landscape = 'landscape',
  /** Слой воды */
  Water = 'water',
}

/**
 * Перечисление форм ландшафтных слоёв.
 * Используется вместо строковых литералов ('plane' | 'perlin')
 * для повышения типобезопасности и единообразия по всему проекту.
 * Значения перечисления строковые, что сохраняет совместимость с сериализацией и UI-компонентами.
 */
export enum GfxLayerShape {
  /** Плоская поверхность (плоскость) */
  Plane = 'plane',
  /**
   * Рельефная поверхность (террейн).
   * Строковое значение 'terrain' для явного обозначения неплоской поверхности.
   */
  Terrain = 'terrain',
}

/**
 * Зона цвета с границами по параметру (высоте, наклону, кривизне).
 * Определяет диапазон значений параметра, в котором преобладает данный цвет.
 */
export interface GfxColorZone {
  /** Уникальный идентификатор зоны */
  id: string;
  /** Название зоны (например, 'Песок', 'Трава', 'Камни', 'Снег') */
  name: string;
  /** Цвет зоны в любом CSS-формате */
  color: string;
  /** Минимальное значение параметра для этой зоны */
  min: number;
  /** Максимальное значение параметра для этой зоны */
  max: number;
}

/**
 * Конфигурация многоцветного градиента на основе параметра поверхности.
 * Поддерживает создание зональной окраски с плавными переходами между зонами.
 */
export interface GfxMultiColorConfig {
  /** Параметр, по которому определяется цвет */
  parameter: 'height' | 'slope' | 'curvature';
  /** Цветовые зоны, отсортированные по возрастанию значения параметра */
  zones: GfxColorZone[];
  /** 
   * Размер зоны перехода между цветами в единицах параметра.
   * В переходной зоне происходит плавная интерполяция между соседними цветами.
   * Например, для высоты: 2.0 означает градиент в зоне ±1 метр от границы зон.
   */
  blendWidth?: number;
  /**
   * Диапазон значений параметра для нормализации.
   * Если не указан, автоматически вычисляется как [min зоны, max зоны].
   */
  range?: [number, number];
}

export interface GfxLayer {
  id: string;
  name: string;
  /** Тип слоя, заданный перечислением GfxLayerType */
  type?: GfxLayerType;
  width?: number;
  /**
   * Глубина слоя (ось Z) в условных метрах.
   *
   * Ранее поле называлось «height», что вводило в заблуждение, так как речь идёт
   * не о вертикальной высоте, а о протяжённости площадки по Z. Теперь используется
   * термин «depth». Для обратной совместимости остальные части кода аккуратно
   * обрабатывают наличие старого поля при загрузке старых сцен.
   */
  depth?: number;
  /** Форма поверхности слоя, заданная перечислением GfxLayerShape */
  shape?: GfxLayerShape;
  /** Конфигурация террейна (новая архитектура) */
  terrain?: GfxTerrainConfig;
  /** 
   * Простой цвет слоя (legacy).
   * Используется для обратной совместимости и простых одноцветных слоев.
   */
  color?: string;
  /**
   * Конфигурация многоцветной градиентной окраски.
   * Если задана, то имеет приоритет над полем color.
   */
  multiColor?: GfxMultiColorConfig;
}
