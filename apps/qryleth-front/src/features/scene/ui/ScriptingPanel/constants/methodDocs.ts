/**
 * –ï–¥–∏–Ω—ã–π –∏—Å—Ç–æ—á–Ω–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤–æ–π –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ –ø–æ –º–µ—Ç–æ–¥–∞–º SceneAPI.
 *
 * –•—Ä–∞–Ω–∏—Ç —á–µ–ª–æ–≤–µ–∫–æ—á–∏—Ç–∞–µ–º—ã–µ –æ–ø–∏—Å–∞–Ω–∏—è (—Å–∏–≥–Ω–∞—Ç—É—Ä—ã, –ø–∞—Ä–∞–º–µ—Ç—Ä—ã, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è)
 * –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Å—Ä–∞–∑—É –≤ –¥–≤—É—Ö –º–µ—Ö–∞–Ω–∏–∑–º–∞—Ö –ø–æ–¥—Å–∫–∞–∑–æ–∫:
 * - –≤ –∞–≤—Ç–æ–∫–æ–º–ø–ª–∏—Ç–µ (–∫–∞–∫ –≤—Å–ø–ª—ã–≤–∞—é—â–∏–µ –æ–ø–∏—Å–∞–Ω–∏—è –ø—É–Ω–∫—Ç–æ–≤);
 * - –≤ hover‚Äë–ø–æ–¥—Å–∫–∞–∑–∫–∞—Ö —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞.
 *
 * –í–ê–ñ–ù–û: –ª—é–±—ã–µ –ø—Ä–∞–≤–∫–∏ —Ç–µ–∫—Å—Ç–∞ –æ–ø–∏—Å–∞–Ω–∏–π –Ω—É–∂–Ω–æ –≤–Ω–æ—Å–∏—Ç—å —Ç–æ–ª—å–∫–æ –∑–¥–µ—Å—å ‚Äî
 * –æ—Å—Ç–∞–ª—å–Ω–æ–π –∫–æ–¥ –ø–æ–¥—Ç—è–≥–∏–≤–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏–∑ —ç—Ç–æ–≥–æ –º–æ–¥—É–ª—è.
 */
export const METHOD_DOCS: Record<string, string> = {
  getSceneOverview: `getSceneOverview(): SceneOverview
–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç: {
  totalObjects: number,
  totalInstances: number,
  objects: SceneObjectInfo[],
  instances: SceneInstanceInfo[],
  sceneName: string,
  layers: Array<{id, name, visible, objectCount}>
}
–û–ø–∏—Å–∞–Ω–∏–µ: –ü–æ–ª—É—á–∏—Ç—å –æ–±—â—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å—Ü–µ–Ω–µ —Å –æ–±—ä–µ–∫—Ç–∞–º–∏, —ç–∫–∑–µ–º–ø–ª—è—Ä–∞–º–∏ –∏ —Å–ª–æ—è–º–∏`,

  getSceneObjects: `getSceneObjects(): SceneObjectInfo[]
–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç: Array<{
  uuid: string,
  name: string,
  layerId?: string,
  visible?: boolean,
  libraryUuid?: string,
  boundingBox?: BoundingBox,
  primitiveCount: number,
  primitiveTypes: string[],
  hasInstances: boolean,
  instanceCount: number
}>
–û–ø–∏—Å–∞–Ω–∏–µ: –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –æ–±—ä–µ–∫—Ç–æ–≤ —Å—Ü–µ–Ω—ã`,

  getSceneInstances: `getSceneInstances(): SceneInstanceInfo[]
–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç: Array<{
  uuid: string,
  objectUuid: string,
  objectName: string,
  transform?: Transform,
  visible?: boolean
}>
–û–ø–∏—Å–∞–Ω–∏–µ: –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–≤ –æ–±—ä–µ–∫—Ç–æ–≤`,

  findObjectByUuid: `findObjectByUuid(uuid: string): SceneObject | null
–ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
  uuid: string - UUID –æ–±—ä–µ–∫—Ç–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞
–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç: SceneObject | null
–û–ø–∏—Å–∞–Ω–∏–µ: –ù–∞–π—Ç–∏ –æ–±—ä–µ–∫—Ç –ø–æ UUID`,

  findObjectByName: `findObjectByName(name: string): SceneObject | null
–ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
  name: string - –ò–º—è –æ–±—ä–µ–∫—Ç–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞ (—á–∞—Å—Ç–∏—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ)
–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç: SceneObject | null
–û–ø–∏—Å–∞–Ω–∏–µ: –ù–∞–π—Ç–∏ –æ–±—ä–µ–∫—Ç –ø–æ –∏–º–µ–Ω–∏ (–ø–µ—Ä–≤—ã–π –Ω–∞–π–¥–µ–Ω–Ω—ã–π)`,

  addInstances: `addInstances(objectUuid, layerId?, count?, placementStrategyConfig?): AddInstancesResult
–ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
  objectUuid: string - UUID —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –æ–±—ä–µ–∫—Ç–∞
  layerId?: string - ID —Å–ª–æ—è –¥–ª—è —Ä–∞–∑–º–µ—â–µ–Ω–∏—è
  count?: number = 1 - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–≤
  placementStrategyConfig?: {
    strategy: 'Random' | 'RandomNoCollision' | 'PlaceAround',
    // –î–ª—è PlaceAround —Ç—Ä–µ–±—É–µ—Ç—Å—è metadata —Å–ª–µ–¥—É—é—â–µ–≥–æ –≤–∏–¥–∞:
    metadata?: {
      targetInstanceUuid?: string,   // UUID –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∏–Ω—Å—Ç–∞–Ω—Å–∞ (–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç 1)
      targetObjectUuid?: string,     // UUID –æ–±—ä–µ–∫—Ç–∞ (–≤—Å–µ –µ–≥–æ –∏–Ω—Å—Ç–∞–Ω—Å—ã, –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç 2)
      minDistance: number,           // –º–∏–Ω. —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –æ—Ç –≥—Ä–∞–Ω–∏ –¥–æ –≥—Ä–∞–Ω–∏
      maxDistance: number,           // –º–∞–∫—Å. —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –æ—Ç –≥—Ä–∞–Ω–∏ –¥–æ –≥—Ä–∞–Ω–∏
      angleOffset?: number,          // —Å–¥–≤–∏–≥ –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ —É–≥–ª–∞ (—Ä–∞–¥)
      distributeEvenly?: boolean,    // —Ä–∞–≤–Ω–æ–º–µ—Ä–Ω–æ –ø–æ –∫—Ä—É–≥—É (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é true)
      onlyHorizontal?: boolean       // —Ç–æ–ª—å–∫–æ –ø–æ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª–∏ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é true)
    }
  }
–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç: {success: boolean, instanceCount: number, instances?: CreatedInstanceInfo[]}
–û–ø–∏—Å–∞–Ω–∏–µ: –°–æ–∑–¥–∞—Ç—å —ç–∫–∑–µ–º–ø–ª—è—Ä—ã —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –æ–±—ä–µ–∫—Ç–∞ —Å —É–Ω–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–º —Ä–∞–∑–º–µ—â–µ–Ω–∏–µ–º`,

  getAvailableLayers: `getAvailableLayers(): Array<LayerInfo>
–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç: Array<{
  id: string,
  name: string,
  visible: boolean,
  position: Vector3
}>
–û–ø–∏—Å–∞–Ω–∏–µ: –ü–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Å–ª–æ–∏ –¥–ª—è —Ä–∞–∑–º–µ—â–µ–Ω–∏—è –æ–±—ä–µ–∫—Ç–æ–≤`,

  canAddInstance: `canAddInstance(objectUuid: string): boolean
–ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
  objectUuid: string - UUID –æ–±—ä–µ–∫—Ç–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç: boolean
–û–ø–∏—Å–∞–Ω–∏–µ: –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –º–æ–∂–Ω–æ –ª–∏ –¥–æ–±–∞–≤–∏—Ç—å —ç–∫–∑–µ–º–ø–ª—è—Ä –æ–±—ä–µ–∫—Ç–∞`,

  getSceneStats: `getSceneStats(): SceneStats
–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç: {
  total: {objects: number, instances: number, layers: number},
  visible: {objects: number, instances: number, layers: number},
  primitiveTypes: string[]
}
–û–ø–∏—Å–∞–Ω–∏–µ: –ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Å—Ü–µ–Ω—ã (–æ–±—â–∏–µ –∏ –≤–∏–¥–∏–º—ã–µ –æ–±—ä–µ–∫—Ç—ã, —ç–∫–∑–µ–º–ø–ª—è—Ä—ã, —Å–ª–æ–∏)`,

  searchObjectsInLibrary: `searchObjectsInLibrary(query: string): Promise<ObjectRecord[]>
–ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
  query: string - –°—Ç—Ä–æ–∫–∞ –ø–æ–∏—Å–∫–∞ (–ø–æ –∏–º–µ–Ω–∏ –∏–ª–∏ –æ–ø–∏—Å–∞–Ω–∏—é)
–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç: Promise<ObjectRecord[]>
–û–ø–∏—Å–∞–Ω–∏–µ: –ü–æ–∏—Å–∫ –æ–±—ä–µ–∫—Ç–æ–≤ –≤ –±–∏–±–ª–∏–æ—Ç–µ–∫–µ –ø–æ —Å—Ç—Ä–æ–∫–µ –∑–∞–ø—Ä–æ—Å–∞`,

  createObject: `createObject(objectData, layerId?, count?, placementStrategyConfig?): AddObjectWithTransformResult
–ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
  objectData: GfxObject - –î–∞–Ω–Ω—ã–µ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –æ–±—ä–µ–∫—Ç–∞
  layerId?: string = 'objects' - ID —Å–ª–æ—è –¥–ª—è —Ä–∞–∑–º–µ—â–µ–Ω–∏—è
  count?: number = 1 - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–≤
  placementStrategyConfig?: {
    strategy: 'Random' | 'RandomNoCollision' | 'PlaceAround',
    // –î–ª—è PlaceAround —Ç—Ä–µ–±—É–µ—Ç—Å—è metadata, —Å–º. addInstances
    metadata?: any
  }
–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç: {success: boolean, objectUuid?: string, instanceUuid?: string, error?: string}
–û–ø–∏—Å–∞–Ω–∏–µ: –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –æ–±—ä–µ–∫—Ç –∏ —Ä–∞–∑–º–µ—Å—Ç–∏—Ç—å –µ–≥–æ —ç–∫–∑–µ–º–ø–ª—è—Ä—ã`,

  addObjectFromLibrary: `addObjectFromLibrary(objectUuid, layerId?, count?, placementStrategyConfig?): Promise<AddObjectResult>
–ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
  objectUuid: string - UUID –æ–±—ä–µ–∫—Ç–∞ –≤ –±–∏–±–ª–∏–æ—Ç–µ–∫–µ
  layerId?: string - ID —Å–ª–æ—è –¥–ª—è —Ä–∞–∑–º–µ—â–µ–Ω–∏—è
  count?: number = 1 - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–≤
  placementStrategyConfig?: {
    strategy: 'Random' | 'RandomNoCollision' | 'PlaceAround',
    // –î–ª—è PlaceAround —Ç—Ä–µ–±—É–µ—Ç—Å—è metadata, —Å–º. addInstances
    metadata?: any
  }
–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç: Promise<{success: boolean, objectUuid?: string, instanceUuid?: string, error?: string}>
–û–ø–∏—Å–∞–Ω–∏–µ: –ò–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –æ–±—ä–µ–∫—Ç –∏–∑ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –∏ —Ä–∞–∑–º–µ—Å—Ç–∏—Ç—å —ç–∫–∑–µ–º–ø–ª—è—Ä—ã –ø–æ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏`,

  adjustInstancesForPerlinTerrain: `adjustInstancesForPerlinTerrain(perlinLayerId: string): TerrainAdjustResult
–ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
  perlinLayerId: string - ID —Å–ª–æ—è —Å Perlin –ª–∞–Ω–¥—à–∞—Ñ—Ç–æ–º
–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç: {success: boolean, adjustedCount?: number, error?: string}
–û–ø–∏—Å–∞–Ω–∏–µ: –ü—Ä–∏–≤—è–∑–∞—Ç—å —ç–∫–∑–µ–º–ø–ª—è—Ä—ã –∫ –ª–∞–Ω–¥—à–∞—Ñ—Ç—É Perlin`,

  // –ú–µ—Ç–æ–¥—ã —Ç–µ—Ä—Ä–µ–π–Ω–∞ (–±—ã–ª–∏ –æ–ø–∏—Å–∞–Ω—ã —Ä–∞–Ω–µ–µ –≤ completionData.ts)
  generateProceduralTerrain: `generateProceduralTerrain(spec): Promise<GfxTerrainConfig>
–ü—Ä–∏–º–µ—Ä: await sceneApi.generateProceduralTerrain({
  world: { width: 200, depth: 200, edgeFade: 0.1 },
  base: { seed: 42, octaveCount: 4, amplitude: 8, persistence: 0.5, width: 64, height: 64, heightOffset: 0 },
  pool: { recipes: [] },
  seed: 42
})
–û–ø–∏—Å–∞–Ω–∏–µ: –°–æ–∑–¥–∞–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é —Ç–µ—Ä—Ä–µ–π–Ω–∞ –±–µ–∑ —Å–æ–∑–¥–∞–Ω–∏—è —Å–ª–æ—è`,

  generateTerrainOpsFromPool: `generateTerrainOpsFromPool(pool, seed?, options?): Promise<GfxTerrainOp[]>
–ü—Ä–∏–º–µ—Ä (c —Å–∏–¥–æ–º): await sceneApi.generateTerrainOpsFromPool({
  recipes: [{ kind: 'hill', count: 10, placement: { type: 'uniform' }, radius: 15, intensity: 5 }]
}, 123, { worldWidth: 200, worldDepth: 200 })
–ü—Ä–∏–º–µ—Ä (–±–µ–∑ —Å–∏–¥–∞): await sceneApi.generateTerrainOpsFromPool({
  recipes: [{ kind: 'hill', count: 10, placement: { type: 'uniform' }, radius: 15, intensity: 5 }]
}, undefined, { worldWidth: 200, worldDepth: 200 }) // —Å–∏–¥ —Å–≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
–û–ø–∏—Å–∞–Ω–∏–µ: –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Ç–æ–ª—å–∫–æ –æ–ø–µ—Ä–∞—Ü–∏–∏ –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏–∏ —Ä–µ–ª—å–µ—Ñ–∞; –µ—Å–ª–∏ seed –Ω–µ —É–∫–∞–∑–∞–Ω ‚Äî —Å–æ–∑–¥–∞—ë—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏`,

  createProceduralLayer: `createProceduralLayer(spec, layerData?): Promise<{ success, layerId?, error? }>
üåü –ì–õ–ê–í–ù–´–ô –ú–ï–¢–û–î –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Ä—Ä–µ–π–Ω–æ–≤!
–ü—Ä–∏–º–µ—Ä: await sceneApi.createProceduralLayer({
  world: { width: 200, depth: 200 },
  base: { seed: 42, octaveCount: 4, amplitude: 8, persistence: 0.5, width: 64, height: 64, heightOffset: 0 },
  pool: { recipes: [{ kind: 'hill', count: 10, placement: { type: 'uniform' }, radius: 15, intensity: 5 }] },
  seed: 42
}, { name: '–ú–æ–π —Ç–µ—Ä—Ä–µ–π–Ω', visible: true })
–û–ø–∏—Å–∞–Ω–∏–µ: –°–æ–∑–¥–∞–µ—Ç —Ç–µ—Ä—Ä–µ–π–Ω –≤ —Å—Ü–µ–Ω–µ –∏ –≤—ã—Ä–∞–≤–Ω–∏–≤–∞–µ—Ç –æ–±—ä–µ–∫—Ç—ã`,
}

/**
 * –í–µ—Ä–Ω—É—Ç—å –¥–æ–∫—É –ø–æ –∏–º–µ–Ω–∏ –º–µ—Ç–æ–¥–∞ SceneAPI.
 * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º –∏–ª–∏ null, –µ—Å–ª–∏ –º–µ—Ç–æ–¥ –Ω–µ–∏–∑–≤–µ—Å—Ç–µ–Ω.
 */
export const getMethodDoc = (methodName: string): string | null => {
  return METHOD_DOCS[methodName] || null
}

/**
 * –£–ø–æ—Ä—è–¥–æ—á–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –º–µ—Ç–æ–¥–æ–≤ SceneAPI –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –∞–≤—Ç–æ–∫–æ–º–ø–ª–∏—Ç–µ.
 * –ú–æ–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å –ø–æ—Ä—è–¥–æ–∫ –±–µ–∑ –ø—Ä–∞–≤–∫–∏ —Å–∞–º–∏—Ö –æ–ø–∏—Å–∞–Ω–∏–π.
 */
export const getSceneApiMethodList = (): string[] => [
  'getSceneOverview',
  'getSceneObjects',
  'getSceneInstances',
  'findObjectByUuid',
  'findObjectByName',
  'addInstances',
  'generateProceduralTerrain',
  'generateTerrainOpsFromPool',
  'createProceduralLayer',
  'getSceneStats',
  'createObject',
  'getAvailableLayers',
  'canAddInstance',
  'searchObjectsInLibrary',
  'addObjectFromLibrary',
  'adjustInstancesForPerlinTerrain',
]
