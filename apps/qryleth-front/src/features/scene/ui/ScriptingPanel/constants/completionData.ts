import { createStyledTooltip } from '../utils/tooltipUtils'

export const getSceneApiCompletions = () => [
  {
    label: 'getSceneOverview',
    type: 'function',
    info: createStyledTooltip(`getSceneOverview(): SceneOverview
–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç: {
  totalObjects: number,
  totalInstances: number,
  objects: SceneObjectInfo[],
  instances: SceneInstanceInfo[],
  sceneName: string,
  layers: Array<{id, name, visible, objectCount}>
}
–û–ø–∏—Å–∞–Ω–∏–µ: –ü–æ–ª—É—á–∏—Ç—å –æ–±—â—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å—Ü–µ–Ω–µ —Å –æ–±—ä–µ–∫—Ç–∞–º–∏, —ç–∫–∑–µ–º–ø–ª—è—Ä–∞–º–∏ –∏ —Å–ª–æ—è–º–∏`)
  },
  {
    label: 'getSceneObjects',
    type: 'function',
    info: createStyledTooltip(`getSceneObjects(): SceneObjectInfo[]
–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç: Array<{
  uuid: string,
  name: string,
  layerId?: string,
  visible?: boolean,
  libraryUuid?: string,
  boundingBox?: BoundingBox,
  primitiveCount: number,
  primitiveTypes: string[],
  hasInstances: boolean,
  instanceCount: number
}>
–û–ø–∏—Å–∞–Ω–∏–µ: –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –æ–±—ä–µ–∫—Ç–æ–≤ —Å—Ü–µ–Ω—ã`)
  },
  {
    label: 'getSceneInstances',
    type: 'function',
    info: createStyledTooltip(`getSceneInstances(): SceneInstanceInfo[]
–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç: Array<{
  uuid: string,
  objectUuid: string,
  objectName: string,
  transform?: Transform,
  visible?: boolean
}>
–û–ø–∏—Å–∞–Ω–∏–µ: –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–≤ –æ–±—ä–µ–∫—Ç–æ–≤`)
  },
  {
    label: 'findObjectByUuid',
    type: 'function',
    info: createStyledTooltip(`findObjectByUuid(uuid: string): SceneObject | null
–ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
  uuid: string - UUID –æ–±—ä–µ–∫—Ç–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞
–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç: SceneObject | null
–û–ø–∏—Å–∞–Ω–∏–µ: –ù–∞–π—Ç–∏ –æ–±—ä–µ–∫—Ç –ø–æ UUID`)
  },
  {
    label: 'findObjectByName',
    type: 'function',
    info: createStyledTooltip(`findObjectByName(name: string): SceneObject | null
–ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
  name: string - –ò–º—è –æ–±—ä–µ–∫—Ç–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞ (—á–∞—Å—Ç–∏—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ)
–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç: SceneObject | null
–û–ø–∏—Å–∞–Ω–∏–µ: –ù–∞–π—Ç–∏ –æ–±—ä–µ–∫—Ç –ø–æ –∏–º–µ–Ω–∏ (–ø–µ—Ä–≤—ã–π –Ω–∞–π–¥–µ–Ω–Ω—ã–π)`)
  },
  {
    label: 'addInstances',
    type: 'function',
    info: createStyledTooltip(`addInstances(objectUuid, layerId?, count?, placementStrategyConfig?): AddInstancesResult
–ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
  objectUuid: string - UUID —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –æ–±—ä–µ–∫—Ç–∞
  layerId?: string - ID —Å–ª–æ—è –¥–ª—è —Ä–∞–∑–º–µ—â–µ–Ω–∏—è
  count?: number = 1 - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–≤
  placementStrategyConfig?: {
    strategy: 'Random' | 'RandomNoCollision' | 'PlaceAround',
    // –î–ª—è PlaceAround —Ç—Ä–µ–±—É–µ—Ç—Å—è metadata —Å–ª–µ–¥—É—é—â–µ–≥–æ –≤–∏–¥–∞:
    metadata?: {
      // –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç 1: –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –∏–Ω—Å—Ç–∞–Ω—Å
      targetInstanceUuid?: string,
      // –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç 2: –≤—Å–µ –∏–Ω—Å—Ç–∞–Ω—Å—ã –æ–±—ä–µ–∫—Ç–∞
      targetObjectUuid?: string,
      // –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏—è (–µ–¥. –º–∏—Ä–∞):
      minDistance: number,
      maxDistance: number,
      // –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è:
      angleOffset?: number,          // –Ω–∞—á–∞–ª—å–Ω—ã–π —É–≥–æ–ª –≤ —Ä–∞–¥–∏–∞–Ω–∞—Ö
      distributeEvenly?: boolean,    // —Ä–∞–≤–Ω–æ–º–µ—Ä–Ω–æ –ø–æ –∫—Ä—É–≥—É (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é true)
      onlyHorizontal?: boolean       // —Ç–æ–ª—å–∫–æ –ø–æ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª–∏ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é true)
    }
  }
–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç: {success: boolean, instanceCount: number, instances?: CreatedInstanceInfo[]}
–û–ø–∏—Å–∞–Ω–∏–µ: –°–æ–∑–¥–∞—Ç—å —ç–∫–∑–µ–º–ø–ª—è—Ä—ã —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –æ–±—ä–µ–∫—Ç–∞ —Å —É–Ω–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–º —Ä–∞–∑–º–µ—â–µ–Ω–∏–µ–º`)
  },
  {
    label: 'generateProceduralTerrain',
    type: 'function',
    info: createStyledTooltip(`generateProceduralTerrain(spec): Promise<GfxTerrainConfig>
–ü—Ä–∏–º–µ—Ä: await sceneApi.generateProceduralTerrain({
  world: { width: 200, depth: 200, edgeFade: 0.1 },
  base: { seed: 42, octaveCount: 4, amplitude: 8, persistence: 0.5, width: 64, height: 64, heightOffset: 0 },
  pool: { recipes: [] },
  seed: 42
})
–û–ø–∏—Å–∞–Ω–∏–µ: –°–æ–∑–¥–∞–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é —Ç–µ—Ä—Ä–µ–π–Ω–∞ –±–µ–∑ —Å–æ–∑–¥–∞–Ω–∏—è —Å–ª–æ—è`)
  },
  {
    label: 'generateTerrainOpsFromPool',
    type: 'function',
    info: createStyledTooltip(`generateTerrainOpsFromPool(pool, seed?, options?): Promise<GfxTerrainOp[]>
–ü—Ä–∏–º–µ—Ä (c —Å–∏–¥–æ–º): await sceneApi.generateTerrainOpsFromPool({
  recipes: [{ kind: 'hill', count: 10, placement: { type: 'uniform' }, radius: 15, intensity: 5 }]
}, 123, { worldWidth: 200, worldDepth: 200 })
–ü—Ä–∏–º–µ—Ä (–±–µ–∑ —Å–∏–¥–∞): await sceneApi.generateTerrainOpsFromPool({
  recipes: [{ kind: 'hill', count: 10, placement: { type: 'uniform' }, radius: 15, intensity: 5 }]
}, undefined, { worldWidth: 200, worldDepth: 200 }) // —Å–∏–¥ —Å–≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
–û–ø–∏—Å–∞–Ω–∏–µ: –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Ç–æ–ª—å–∫–æ –æ–ø–µ—Ä–∞—Ü–∏–∏ –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏–∏ —Ä–µ–ª—å–µ—Ñ–∞; –µ—Å–ª–∏ seed –Ω–µ —É–∫–∞–∑–∞–Ω ‚Äî —Å–æ–∑–¥–∞—ë—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏`)
  },
  {
    label: 'createProceduralLayer',
    type: 'function',
    info: createStyledTooltip(`createProceduralLayer(spec, layerData?): Promise<{ success, layerId?, error? }>
üåü –ì–õ–ê–í–ù–´–ô –ú–ï–¢–û–î –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Ä—Ä–µ–π–Ω–æ–≤!
–ü—Ä–∏–º–µ—Ä: await sceneApi.createProceduralLayer({
  world: { width: 200, depth: 200 },
  base: { seed: 42, octaveCount: 4, amplitude: 8, persistence: 0.5, width: 64, height: 64, heightOffset: 0 },
  pool: { recipes: [{ kind: 'hill', count: 10, placement: { type: 'uniform' }, radius: 15, intensity: 5 }] },
  seed: 42
}, { name: '–ú–æ–π —Ç–µ—Ä—Ä–µ–π–Ω', visible: true })
–û–ø–∏—Å–∞–Ω–∏–µ: –°–æ–∑–¥–∞–µ—Ç —Ç–µ—Ä—Ä–µ–π–Ω –≤ —Å—Ü–µ–Ω–µ –∏ –≤—ã—Ä–∞–≤–Ω–∏–≤–∞–µ—Ç –æ–±—ä–µ–∫—Ç—ã`)
  },
  {
    label: 'terrainHelpers',
    type: 'variable',
    info: createStyledTooltip(`terrainHelpers: –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã ¬´fit¬ª –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –û–ü–ï–†–ê–¶–ò–ô –±–µ–∑ —Å–æ–∑–¥–∞–Ω–∏—è —Å–ª–æ—è\n
–ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ: —É–ø—Ä–æ—Å—Ç–∏—Ç—å –∑–∞–¥–∞–Ω–∏–µ —Å–ª–æ–∂–Ω—ã—Ö —Ñ–æ—Ä–º (–¥–æ–ª–∏–Ω–∞/–≥—Ä—è–¥–∞), –≤–æ–∑–≤—Ä–∞—â–∞—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ —Ä–µ—Ü–µ–ø—Ç—ã (GfxTerrainOpRecipe[]) –∏ –æ—Ü–µ–Ω–∫–∏ –±—é–¥–∂–µ—Ç–∞.\n
–í–∞–∂–Ω–æ: —Ö–µ–ª–ø–µ—Ä—ã –ù–ï —Å–æ–∑–¥–∞—é—Ç —Å–ª–æ–π ‚Äî –≤—ã —Å–∞–º–∏ —Å–æ–±–∏—Ä–∞–µ—Ç–µ spec.pool –∏ –≤—ã–∑—ã–≤–∞–µ—Ç–µ createProceduralLayer.`)
  },
  {
    label: 'terrainHelpers.valleyFitToRecipes',
    type: 'function',
    info: createStyledTooltip(`terrainHelpers.valleyFitToRecipes(rect, options, world, edgeFade?): FitResult\n
–í–ø–∏—Å—ã–≤–∞–µ—Ç –¥–æ–ª–∏–Ω—É (valley) –≤ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫ XZ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç:\n- recipes: GfxTerrainOpRecipe[]\n- estimateOps: —á–∏—Å–ª–æ –æ–ø–µ—Ä–∞—Ü–∏–π (–¥–ª—è maxOps)\n- orientation: —É–≥–æ–ª (–µ—Å–ª–∏ direction='auto')\n- warnings: –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è\n
rect: { x, z, width, depth }\noptions: { thickness, depth?, prominencePct?, direction?: 'auto'|'x'|'z'|angle, continuity?: 'continuous'|'segmented', variation?, edgeMargin?, budgetShare?, randomRotationEnabled? }\nworld: { width, depth }\nedgeFade?: —á–∏—Å–ª–æ 0..1\n
–ü—Ä–∏–º–µ—Ä:\nconst world = { width: 300, depth: 200 }\nconst rect = { x: -140, z: -10, width: 280, depth: 20 }\nconst fit = sceneApi.terrainHelpers.valleyFitToRecipes(rect, { thickness: 40, depth: 8, direction: 'auto' }, world, 0.15)\nconst maxOps = sceneApi.terrainHelpers.suggestGlobalBudget(fit.recipes, 0.2)\nconst { trimmedRecipes } = sceneApi.terrainHelpers.autoBudget(fit.recipes, maxOps)\nawait sceneApi.createProceduralLayer({ world: { ...world, edgeFade: 0.15 }, base: {...}, pool: { global: { maxOps }, recipes: trimmedRecipes }, seed: 1 })`)
  },
  {
    label: 'terrainHelpers.ridgeBandFitToRecipes',
    type: 'function',
    info: createStyledTooltip(`terrainHelpers.ridgeBandFitToRecipes(rect, options, world, edgeFade?): FitResult\n
–í–ø–∏—Å—ã–≤–∞–µ—Ç –≥—Ä—è–¥—É/—Ö—Ä–µ–±–µ—Ç (ridge) –≤ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫ XZ. –ü—Ä–∏ direction='auto' –æ—Ä–∏–µ–Ω—Ç–∏—Ä—É–µ—Ç –≤–¥–æ–ª—å –î–õ–ò–ù–ù–û–ô —Å—Ç–æ—Ä–æ–Ω—ã rect.\n–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç FitResult (recipes, estimateOps, orientation, warnings).\n
options: { thickness, height?, prominencePct?, direction?, continuity?, variation?, edgeMargin?, budgetShare?, randomRotationEnabled? }`)
  },
  {
    label: 'terrainHelpers.estimateOpsForRecipes',
    type: 'function',
    info: createStyledTooltip(`terrainHelpers.estimateOpsForRecipes(recipes): number\n
–û—Ü–µ–Ω–∏—Ç—å —Å—É–º–º–∞—Ä–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–ø–µ—Ä–∞—Ü–∏–π (ops) –¥–ª—è –ø—É–ª–∞.\n–≠–≤—Ä–∏—Å—Ç–∏–∫–∞: ridge/valley —Å–æ step ‚Üí 5/—Ü–µ–Ω—Ç—Ä; crater ‚Üí 2; terrace ‚Üí 4; –æ—Å—Ç–∞–ª—å–Ω–æ–µ ‚Üí 1.`)
  },
  {
    label: 'terrainHelpers.suggestGlobalBudget',
    type: 'function',
    info: createStyledTooltip(`terrainHelpers.suggestGlobalBudget(recipes, margin=0.2): number\n
–†–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–Ω—ã–π pool.global.maxOps —Å –∑–∞–ø–∞—Å–æ–º (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é +20%).`)
  },
  {
    label: 'terrainHelpers.autoBudget',
    type: 'function',
    info: createStyledTooltip(`terrainHelpers.autoBudget(recipes, maxOps): { trimmedRecipes, usedOps, report }\n
–ü–æ–¥—Ä–µ–∑–∞–µ—Ç ¬´–ø—Ä–æ–∂–æ—Ä–ª–∏–≤—ã–µ¬ª —Ä–µ—Ü–µ–ø—Ç—ã –ø–æ–¥ –±—é–¥–∂–µ—Ç. –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç: –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—è ‚Üí ridge ‚Üí valley.\n–†–µ—Ü–µ–ø—Ç—ã —Å count=0 —É–¥–∞–ª—è—é—Ç—Å—è.`)
  },
  {
    label: 'getSceneStats',
    type: 'function',
    info: createStyledTooltip(`getSceneStats(): SceneStats
–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç: {
  total: {objects: number, instances: number, layers: number},
  visible: {objects: number, instances: number, layers: number},
  primitiveTypes: string[]
}
–û–ø–∏—Å–∞–Ω–∏–µ: –ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Å—Ü–µ–Ω—ã (–æ–±—â–∏–µ –∏ –≤–∏–¥–∏–º—ã–µ –æ–±—ä–µ–∫—Ç—ã, —ç–∫–∑–µ–º–ø–ª—è—Ä—ã, —Å–ª–æ–∏)`)
  },
  {
    label: 'createObject',
    type: 'function',
    info: createStyledTooltip(`createObject(objectData, layerId?, count?, placementStrategyConfig?): AddObjectWithTransformResult
–ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
  objectData: GfxObject - –î–∞–Ω–Ω—ã–µ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –æ–±—ä–µ–∫—Ç–∞
  layerId?: string = 'objects' - ID —Å–ª–æ—è –¥–ª—è —Ä–∞–∑–º–µ—â–µ–Ω–∏—è
  count?: number = 1 - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–≤
  placementStrategyConfig?: {
    strategy: 'Random' | 'RandomNoCollision' | 'PlaceAround',
    // –î–ª—è PlaceAround —Ç—Ä–µ–±—É–µ—Ç—Å—è metadata, —Å–º. addInstances
    metadata?: any
  }
–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç: {success: boolean, objectUuid?: string, instanceUuid?: string, error?: string}
–û–ø–∏—Å–∞–Ω–∏–µ: –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –æ–±—ä–µ–∫—Ç –∏ —Ä–∞–∑–º–µ—Å—Ç–∏—Ç—å –µ–≥–æ —ç–∫–∑–µ–º–ø–ª—è—Ä—ã`)
  },
  {
    label: 'getAvailableLayers',
    type: 'function',
    info: createStyledTooltip(`getAvailableLayers(): Array<LayerInfo>
–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç: Array<{
  id: string,
  name: string,
  visible: boolean,
  position: Vector3
}>
–û–ø–∏—Å–∞–Ω–∏–µ: –ü–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Å–ª–æ–∏ –¥–ª—è —Ä–∞–∑–º–µ—â–µ–Ω–∏—è –æ–±—ä–µ–∫—Ç–æ–≤`)
  },
  {
    label: 'canAddInstance',
    type: 'function',
    info: createStyledTooltip(`canAddInstance(objectUuid: string): boolean
–ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
  objectUuid: string - UUID –æ–±—ä–µ–∫—Ç–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç: boolean
–û–ø–∏—Å–∞–Ω–∏–µ: –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –º–æ–∂–Ω–æ –ª–∏ –¥–æ–±–∞–≤–∏—Ç—å —ç–∫–∑–µ–º–ø–ª—è—Ä –æ–±—ä–µ–∫—Ç–∞`)
  },
  {
    label: 'searchObjectsInLibrary',
    type: 'function',
    info: createStyledTooltip(`searchObjectsInLibrary(query: string): Promise<ObjectRecord[]>
–ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
  query: string - –°—Ç—Ä–æ–∫–∞ –ø–æ–∏—Å–∫–∞ (–ø–æ –∏–º–µ–Ω–∏ –∏–ª–∏ –æ–ø–∏—Å–∞–Ω–∏—é)
–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç: Promise<ObjectRecord[]>
–û–ø–∏—Å–∞–Ω–∏–µ: –ü–æ–∏—Å–∫ –æ–±—ä–µ–∫—Ç–æ–≤ –≤ –±–∏–±–ª–∏–æ—Ç–µ–∫–µ –ø–æ —Å—Ç—Ä–æ–∫–µ –∑–∞–ø—Ä–æ—Å–∞`)
  },
  {
    label: 'addObjectFromLibrary',
    type: 'function',
    info: createStyledTooltip(`addObjectFromLibrary(objectUuid, layerId?, count?, placementStrategyConfig?): Promise<AddObjectResult>
–ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
  objectUuid: string - UUID –æ–±—ä–µ–∫—Ç–∞ –≤ –±–∏–±–ª–∏–æ—Ç–µ–∫–µ
  layerId?: string - ID —Å–ª–æ—è –¥–ª—è —Ä–∞–∑–º–µ—â–µ–Ω–∏—è
  count?: number = 1 - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–≤
  placementStrategyConfig?: {
    strategy: 'Random' | 'RandomNoCollision' | 'PlaceAround',
    // –î–ª—è PlaceAround —Ç—Ä–µ–±—É–µ—Ç—Å—è metadata, —Å–º. addInstances
    metadata?: any
  }
–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç: Promise<{success: boolean, objectUuid?: string, instanceUuid?: string, error?: string}>
–û–ø–∏—Å–∞–Ω–∏–µ: –ò–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –æ–±—ä–µ–∫—Ç –∏–∑ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –∏ —Ä–∞–∑–º–µ—Å—Ç–∏—Ç—å —ç–∫–∑–µ–º–ø–ª—è—Ä—ã –ø–æ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏`)
  },
  {
    label: 'adjustInstancesForPerlinTerrain',
    type: 'function',
    info: createStyledTooltip(`adjustInstancesForPerlinTerrain(perlinLayerId: string): TerrainAdjustResult
–ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
  perlinLayerId: string - ID —Å–ª–æ—è —Å Perlin –ª–∞–Ω–¥—à–∞—Ñ—Ç–æ–º
–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç: {success: boolean, adjustedCount?: number, error?: string}
–û–ø–∏—Å–∞–Ω–∏–µ: –ü—Ä–∏–≤—è–∑–∞—Ç—å —ç–∫–∑–µ–º–ø–ª—è—Ä—ã –∫ –ª–∞–Ω–¥—à–∞—Ñ—Ç—É Perlin`)
  }
]

export const getConsoleCompletions = () => [
  { label: 'log', type: 'function', info: '–í—ã–≤–µ—Å—Ç–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∫–æ–Ω—Å–æ–ª—å' },
  { label: 'error', type: 'function', info: '–í—ã–≤–µ—Å—Ç–∏ –æ—à–∏–±–∫—É –≤ –∫–æ–Ω—Å–æ–ª—å' },
  { label: 'warn', type: 'function', info: '–í—ã–≤–µ—Å—Ç–∏ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –≤ –∫–æ–Ω—Å–æ–ª—å' },
  { label: 'info', type: 'function', info: '–í—ã–≤–µ—Å—Ç–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ –∫–æ–Ω—Å–æ–ª—å' },
  { label: 'debug', type: 'function', info: '–í—ã–≤–µ—Å—Ç–∏ –æ—Ç–ª–∞–¥–æ—á–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ –∫–æ–Ω—Å–æ–ª—å' },
  { label: 'table', type: 'function', info: '–í—ã–≤–µ—Å—Ç–∏ –¥–∞–Ω–Ω—ã–µ –≤ –≤–∏–¥–µ —Ç–∞–±–ª–∏—Ü—ã' },
  { label: 'clear', type: 'function', info: '–û—á–∏—Å—Ç–∏—Ç—å –∫–æ–Ω—Å–æ–ª—å' }
]

export const getBaseCompletions = () => [
  { label: 'sceneApi', type: 'variable', info: 'API –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å—Ü–µ–Ω–æ–π' },
  { label: 'console', type: 'variable', info: '–ö–æ–Ω—Å–æ–ª—å –±—Ä–∞—É–∑–µ—Ä–∞' },
  { label: 'Math', type: 'variable', info: '–ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∏ –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã' },
  { label: 'Date', type: 'variable', info: '–†–∞–±–æ—Ç–∞ —Å –¥–∞—Ç–æ–π –∏ –≤—Ä–µ–º–µ–Ω–µ–º' },
  { label: 'JSON', type: 'variable', info: '–ü–∞—Ä—Å–∏–Ω–≥ –∏ —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏—è JSON' },
  { label: 'Array', type: 'variable', info: '–ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –º–∞—Å—Å–∏–≤–æ–≤' },
  { label: 'Object', type: 'variable', info: '–ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –æ–±—ä–µ–∫—Ç–æ–≤' },
  { label: 'String', type: 'variable', info: '–ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä —Å—Ç—Ä–æ–∫' },
  { label: 'Number', type: 'variable', info: '–ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä —á–∏—Å–µ–ª' },
  // –ü–æ–¥—Å–∫–∞–∑–∫–∏ –¥–ª—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Ä–∞–∑–º–µ—â–µ–Ω–∏—è –∏ PlaceAround metadata
  { label: 'strategy', type: 'property', info: "–°—Ç—Ä–∞—Ç–µ–≥–∏—è —Ä–∞–∑–º–µ—â–µ–Ω–∏—è: 'Random' | 'RandomNoCollision' | 'PlaceAround'" },
  { label: 'metadata', type: 'property', info: '–û–±—ä–µ–∫—Ç –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–π —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ (–æ–±—è–∑–∞—Ç–µ–ª–µ–Ω –¥–ª—è PlaceAround)' },
  { label: 'targetInstanceUuid', type: 'property', info: 'UUID –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∏–Ω—Å—Ç–∞–Ω—Å–∞ (–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç 1 –¥–ª—è PlaceAround)' },
  { label: 'targetObjectUuid', type: 'property', info: 'UUID –æ–±—ä–µ–∫—Ç–∞ ‚Äî —Ä–∞–∑–º–µ—Å—Ç–∏—Ç—å –≤–æ–∫—Ä—É–≥ –≤—Å–µ—Ö –µ–≥–æ –∏–Ω—Å—Ç–∞–Ω—Å–æ–≤ (–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç 2)' },
  { label: 'minDistance', type: 'property', info: '–ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –æ—Ç –≥—Ä–∞–Ω–∏ –¥–æ –≥—Ä–∞–Ω–∏ (>= 0)' },
  { label: 'maxDistance', type: 'property', info: '–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –æ—Ç –≥—Ä–∞–Ω–∏ –¥–æ –≥—Ä–∞–Ω–∏ (> minDistance)' },
  { label: 'angleOffset', type: 'property', info: '–ù–∞—á–∞–ª—å–Ω—ã–π —É–≥–æ–ª (—Ä–∞–¥–∏–∞–Ω—ã), –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 0' },
  { label: 'distributeEvenly', type: 'property', info: '–†–∞–≤–Ω–æ–º–µ—Ä–Ω–æ–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ –∫—Ä—É–≥—É (boolean, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é true)' },
  { label: 'onlyHorizontal', type: 'property', info: '–ì–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–æ–µ —Ä–∞–∑–º–µ—â–µ–Ω–∏–µ –ø–æ Y (boolean, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é true)' },
  
  // –ü–∞—Ä–∞–º–µ—Ç—Ä—ã —Ç–µ—Ä—Ä–µ–π–Ω–æ–≤
  { label: 'world', type: 'property', info: '–†–∞–∑–º–µ—Ä—ã –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –º–∏—Ä–∞: { width, depth, edgeFade? }' },
  { label: 'base', type: 'property', info: '–ë–∞–∑–æ–≤—ã–π —à—É–º Perlin: { seed, octaveCount, amplitude, persistence, width, height, heightOffset? }' },
  { label: 'pool', type: 'property', info: '–ü—É–ª –æ–ø–µ—Ä–∞—Ü–∏–π —Ä–µ–ª—å–µ—Ñ–∞: { global?: {intensityScale?, maxOps?}, recipes: [] }' },
  { label: 'recipes', type: 'property', info: '–ú–∞—Å—Å–∏–≤ —Ä–µ—Ü–µ–ø—Ç–æ–≤ —Ä–µ–ª—å–µ—Ñ–∞ (hill, valley, crater, plateau, ridge, basin, dune, terrace)' },
  { label: 'kind', type: 'property', info: '–¢–∏–ø —Ä–µ–ª—å–µ—Ñ–∞: hill | valley | crater | plateau | ridge | basin | dune | terrace' },
  { label: 'placement', type: 'property', info: '–†–∞–∑–º–µ—â–µ–Ω–∏–µ: { type: uniform|poisson|ring|gridJitter, ...–ø–∞—Ä–∞–º–µ—Ç—Ä—ã }' },
  { label: 'falloff', type: 'property', info: '–ó–∞—Ç—É—Ö–∞–Ω–∏–µ –∫ –∫—Ä–∞—è–º: smoothstep | gauss | linear' },
  { label: 'bias', type: 'property', info: '–£–º–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã: { preferHeight?, preferSlope?, avoidOverlap? }' },
  { label: 'intensity', type: 'property', info: '–ê–º–ø–ª–∏—Ç—É–¥–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤—ã—Å–æ—Ç—ã (—á–∏—Å–ª–æ –∏–ª–∏ [min, max])' },
  { label: 'radius', type: 'property', info: '–ë–∞–∑–æ–≤—ã–π —Ä–∞–¥–∏—É—Å –ø–æ X (—á–∏—Å–ª–æ –∏–ª–∏ [min, max])' },
  { label: 'aspect', type: 'property', info: '–û—Ç–Ω–æ—à–µ–Ω–∏–µ —Ä–∞–¥–∏—É—Å–æ–≤ Z/X (—á–∏—Å–ª–æ –∏–ª–∏ [min, max]), 1.0 = –∫—Ä—É–≥–ª—ã–π' },
  { label: 'count', type: 'property', info: '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–±—ä–µ–∫—Ç–æ–≤ (—á–∏—Å–ª–æ –∏–ª–∏ [min, max])' },
  { label: 'rotation', type: 'property', info: '–ü–æ–≤–æ—Ä–æ—Ç –≤ —Ä–∞–¥–∏–∞–Ω–∞—Ö (—á–∏—Å–ª–æ –∏–ª–∏ [min, max])' },
  { label: 'step', type: 'property', info: '–†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –º–µ–∂–¥—É —à—Ç—Ä–∏—Ö–∞–º–∏ –¥–ª—è ridge/valley' },
  { label: 'seed', type: 'property', info: '–ó–µ—Ä–Ω–æ –¥–ª—è –¥–µ—Ç–µ—Ä–º–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏' },
  { label: 'octaveCount', type: 'property', info: '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª–æ–µ–≤ —à—É–º–∞ (1-8, —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è 3-5)' },
  { label: 'amplitude', type: 'property', info: '–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –≤—ã—Å–æ—Ç–∞ –±–∞–∑–æ–≤–æ–≥–æ —Ä–µ–ª—å–µ—Ñ–∞' },
  { label: 'persistence', type: 'property', info: '–ó–∞—Ç—É—Ö–∞–Ω–∏–µ –º–µ–∂–¥—É —Å–ª–æ—è–º–∏ —à—É–º–∞ (0.1-0.8)' },
  { label: 'heightOffset', type: 'property', info: '–°–º–µ—â–µ–Ω–∏–µ –±–∞–∑–æ–≤–æ–≥–æ —É—Ä–æ–≤–Ω—è (–º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º)' },
  { label: 'edgeFade', type: 'property', info: '–ó–∞—Ç—É—Ö–∞–Ω–∏–µ –∫ –∫—Ä–∞—è–º –º–∏—Ä–∞ (0.0-0.3)' },
  { label: 'intensityScale', type: 'property', info: '–ì–ª–æ–±–∞–ª—å–Ω—ã–π –º–Ω–æ–∂–∏—Ç–µ–ª—å –∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ—Å—Ç–∏ –æ–ø–µ—Ä–∞—Ü–∏–π' },
  { label: 'maxOps', type: 'property', info: '–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–ø–µ—Ä–∞—Ü–∏–π' },
  { label: 'preferHeight', type: 'property', info: '–ü—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–µ –ø–æ –≤—ã—Å–æ—Ç–µ: { min?, max?, weight? }' },
  { label: 'preferSlope', type: 'property', info: '–ü—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–µ –ø–æ —É–∫–ª–æ–Ω—É: { min?, max?, weight? }' },
  { label: 'avoidOverlap', type: 'property', info: '–ò–∑–±–µ–≥–∞—Ç—å –ø–µ—Ä–µ—Å–µ—á–µ–Ω–∏–π (boolean)' },
  { label: 'minDistance', type: 'property', info: '–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –¥–∏—Å—Ç–∞–Ω—Ü–∏—è –¥–ª—è poisson —Ä–∞–∑–º–µ—â–µ–Ω–∏—è' },
  { label: 'cell', type: 'property', info: '–†–∞–∑–º–µ—Ä —è—á–µ–π–∫–∏ –¥–ª—è gridJitter —Ä–∞–∑–º–µ—â–µ–Ω–∏—è' },
  { label: 'jitter', type: 'property', info: '–î—Ä–æ–∂–∞–Ω–∏–µ –¥–ª—è gridJitter (0.0-1.0)' },
  { label: 'rMin', type: 'property', info: '–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–¥–∏—É—Å –¥–ª—è ring —Ä–∞–∑–º–µ—â–µ–Ω–∏—è' },
  { label: 'rMax', type: 'property', info: '–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–¥–∏—É—Å –¥–ª—è ring —Ä–∞–∑–º–µ—â–µ–Ω–∏—è' },
  { label: 'center', type: 'property', info: '–¶–µ–Ω—Ç—Ä –¥–ª—è ring —Ä–∞–∑–º–µ—â–µ–Ω–∏—è: [x, z]' },
  { label: 'area', type: 'property', info: '–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –æ–±–ª–∞—Å—Ç–∏: { kind: rect|circle, ...–ø–∞—Ä–∞–º–µ—Ç—Ä—ã }' }
]

// –ü–æ–¥—Å–∫–∞–∑–∫–∏ TS-—Ç–∏–ø–æ–≤ –∏—Å–∫–ª—é—á–µ–Ω—ã: –ø–∞–Ω–µ–ª—å –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Ç–æ–ª—å–∫–æ JavaScript

export const getJavaScriptKeywords = () => [
  { label: 'const', type: 'keyword', info: '–û–±—ä—è–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã' },
  { label: 'let', type: 'keyword', info: '–û–±—ä—è–≤–ª–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π' },
  { label: 'var', type: 'keyword', info: '–û–±—ä—è–≤–ª–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π (—É—Å—Ç–∞—Ä–µ–≤—à–µ–µ)' },
  { label: 'function', type: 'keyword', info: '–û–±—ä—è–≤–ª–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏' },
  { label: 'return', type: 'keyword', info: '–í–æ–∑–≤—Ä–∞—Ç –∑–Ω–∞—á–µ–Ω–∏—è –∏–∑ —Ñ—É–Ω–∫—Ü–∏–∏' },
  { label: 'if', type: 'keyword', info: '–£—Å–ª–æ–≤–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ' },
  { label: 'else', type: 'keyword', info: '–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∞—è –≤–µ—Ç–∫–∞ —É—Å–ª–æ–≤–∏—è' },
  { label: 'for', type: 'keyword', info: '–¶–∏–∫–ª for' },
  { label: 'while', type: 'keyword', info: '–¶–∏–∫–ª while' },
  { label: 'try', type: 'keyword', info: '–ë–ª–æ–∫ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏—Å–∫–ª—é—á–µ–Ω–∏–π' },
  { label: 'catch', type: 'keyword', info: '–û–±—Ä–∞–±–æ—Ç–∫–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏–π' },
  { label: 'async', type: 'keyword', info: '–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è' },
  { label: 'await', type: 'keyword', info: '–û–∂–∏–¥–∞–Ω–∏–µ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏' },
  { label: 'true', type: 'keyword', info: '–õ–æ–≥–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ true' },
  { label: 'false', type: 'keyword', info: '–õ–æ–≥–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ false' },
  { label: 'null', type: 'keyword', info: '–ó–Ω–∞—á–µ–Ω–∏–µ null' },
  { label: 'undefined', type: 'keyword', info: '–ó–Ω–∞—á–µ–Ω–∏–µ undefined' }
]

export const getKeywords = () => getJavaScriptKeywords()
