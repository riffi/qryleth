import type { TemplateData } from '../../types'

/**
 * –®–∞–±–ª–æ–Ω: –°–æ–∑–¥–∞–Ω–∏–µ –º–Ω–æ–≥–æ—Ü–≤–µ—Ç–Ω–æ–≥–æ —Ç–µ—Ä—Ä–µ–π–Ω–∞ —Å –≥—Ä–∞–¥–∏–µ–Ω—Ç–∞–º–∏ –ø–æ –≤—ã—Å–æ—Ç–µ –∏ –Ω–∞–∫–ª–æ–Ω—É.
 */
export const multiColorTerrainTemplate: TemplateData = {
  id: 'multicolor-terrain',
  name: '–ú–Ω–æ–≥–æ—Ü–≤–µ—Ç–Ω—ã–π —Ç–µ—Ä—Ä–µ–π–Ω',
  description: '–°–æ–∑–¥–∞–Ω–∏–µ –ª–∞–Ω–¥—à–∞—Ñ—Ç–∞ —Å –º–Ω–æ–≥–æ—Ü–≤–µ—Ç–Ω–æ–π –æ–∫—Ä–∞—Å–∫–æ–π –ø–æ –≤—ã—Å–æ—Ç–µ, –Ω–∞–∫–ª–æ–Ω—É –∏ –∫—Ä–∏–≤–∏–∑–Ω–µ –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–∏.',
  code: `// –ü—Ä–∏–º–µ—Ä —Å–æ–∑–¥–∞–Ω–∏—è –º–Ω–æ–≥–æ—Ü–≤–µ—Ç–Ω–æ–≥–æ —Ç–µ—Ä—Ä–µ–π–Ω–∞
console.log('üé® –°–æ–∑–¥–∞–Ω–∏–µ –º–Ω–æ–≥–æ—Ü–≤–µ—Ç–Ω–æ–≥–æ –≥–æ—Ä–Ω–æ–≥–æ –ª–∞–Ω–¥—à–∞—Ñ—Ç–∞...')

// multiColorApi –¥–æ—Å—Ç—É–ø–µ–Ω –≥–ª–æ–±–∞–ª—å–Ω–æ –≤–º–µ—Å—Ç–µ —Å sceneApi

// –°–æ–∑–¥–∞–Ω–∏–µ –≥–æ—Ä–Ω–æ–≥–æ –ª–∞–Ω–¥—à–∞—Ñ—Ç–∞ —Å –≤—ã—Å–æ—Ç–Ω–æ–π –∑–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å—é
const mountainResult = await sceneApi.createProceduralLayer({
  world: { width: 200, depth: 200, edgeFade: 0.15 },
  base: { 
    seed: 2000, 
    octaveCount: 5, 
    amplitude: 12, 
    persistence: 0.5, 
    width: 80, 
    height: 80,
    heightOffset: -2
  },
  pool: {
    recipes: [
      { 
        kind: 'hill', 
        count: [8, 12], 
        placement: { type: 'poisson', minDistance: 25 }, 
        radius: [10, 18], 
        intensity: [3, 8],
        falloff: 'smoothstep'
      },
      {
        kind: 'valley',
        count: [2, 4],
        placement: { type: 'uniform' },
        radius: [15, 25],
        intensity: [4, 7],
        aspect: [0.3, 0.7]
      }
    ]
  },
  seed: 2000
}, { 
  name: '–ì–æ—Ä–Ω—ã–π –ª–∞–Ω–¥—à–∞—Ñ—Ç',
  // –ü—Ä–∏–º–µ–Ω—è–µ–º –≥–æ—Ç–æ–≤—É—é –≥–æ—Ä–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
  multiColor: multiColorApi.getMountainHeightConfig(1.5)
})

console.log('üèîÔ∏è –ì–æ—Ä–Ω—ã–π –ª–∞–Ω–¥—à–∞—Ñ—Ç —Å–æ–∑–¥–∞–Ω:', mountainResult)

console.log('üé® –°–æ–∑–¥–∞–Ω–∏–µ –ª–∞–Ω–¥—à–∞—Ñ—Ç–∞ —Å –æ–∫—Ä–∞—Å–∫–æ–π –ø–æ –Ω–∞–∫–ª–æ–Ω—É...')

// –°–æ–∑–¥–∞–Ω–∏–µ –≤—Ç–æ—Ä–æ–≥–æ —Å–ª–æ—è —Å –æ–∫—Ä–∞—Å–∫–æ–π –ø–æ –Ω–∞–∫–ª–æ–Ω—É –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–∏
const slopeResult = await sceneApi.createProceduralLayer({
  world: { width: 150, depth: 150, edgeFade: 0.1 },
  base: { 
    seed: 3000, 
    octaveCount: 4, 
    amplitude: 8, 
    persistence: 0.6, 
    width: 60, 
    height: 60 
  },
  pool: { recipes: [] },
  seed: 3000
}, { 
  name: '–°–∫–ª–æ–Ω–æ–≤—ã–π –ª–∞–Ω–¥—à–∞—Ñ—Ç',
  // –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ–∫—Ä–∞—Å–∫—É –ø–æ –Ω–∞–∫–ª–æ–Ω—É –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–∏
  multiColor: multiColorApi.getSlopeBasedConfig(0.08)
})

console.log('‚õ∞Ô∏è –°–∫–ª–æ–Ω–æ–≤—ã–π –ª–∞–Ω–¥—à–∞—Ñ—Ç —Å–æ–∑–¥–∞–Ω:', slopeResult)

console.log('üé® –°–æ–∑–¥–∞–Ω–∏–µ —Ç—Ä–æ–ø–∏—á–µ—Å–∫–æ–≥–æ –æ—Å—Ç—Ä–æ–≤–∞...')

// –°–æ–∑–¥–∞–Ω–∏–µ —Ç—Ä–æ–ø–∏—á–µ—Å–∫–æ–≥–æ –æ—Å—Ç—Ä–æ–≤–∞ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π
const tropicalConfig = multiColorApi.createTropicalConfig(-8, 25, 1.8)

const tropicalResult = await sceneApi.createProceduralLayer({
  world: { width: 180, depth: 180, edgeFade: 0.2 },
  base: { 
    seed: 4000, 
    octaveCount: 6, 
    amplitude: 15, 
    persistence: 0.4, 
    width: 70, 
    height: 70,
    heightOffset: -5
  },
  pool: {
    recipes: [
      { 
        kind: 'hill', 
        count: [3, 5], 
        placement: { type: 'center' }, 
        radius: [30, 45], 
        intensity: [8, 15],
        falloff: 'gauss'
      }
    ]
  },
  seed: 4000
}, { 
  name: '–¢—Ä–æ–ø–∏—á–µ—Å–∫–∏–π –æ—Å—Ç—Ä–æ–≤',
  multiColor: tropicalConfig
})

console.log('üèùÔ∏è –¢—Ä–æ–ø–∏—á–µ—Å–∫–∏–π –æ—Å—Ç—Ä–æ–≤ —Å–æ–∑–¥–∞–Ω:', tropicalResult)

console.log('üé® –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ—Å—Ç–æ–≥–æ –¥–≤—É—Ö—Ü–≤–µ—Ç–Ω–æ–≥–æ –≥—Ä–∞–¥–∏–µ–Ω—Ç–∞...')

// –ü—Ä–æ—Å—Ç–æ–π –¥–≤—É—Ö—Ü–≤–µ—Ç–Ω—ã–π –≥—Ä–∞–¥–∏–µ–Ω—Ç –ø–æ –≤—ã—Å–æ—Ç–µ
const simpleGradient = multiColorApi.createTwoColorGradient(
  'height',
  '#2e5c8a', // —Å–∏–Ω–∏–π –¥–ª—è –Ω–∏–∑–∫–∏—Ö —É—á–∞—Å—Ç–∫–æ–≤
  '#f0f8ff', // –±–µ–ª—ã–π –¥–ª—è –≤—ã—Å–æ–∫–∏—Ö —É—á–∞—Å—Ç–∫–æ–≤
  5,         // –ø–æ—Ä–æ–≥ –ø–µ—Ä–µ—Ö–æ–¥–∞ –Ω–∞ –≤—ã—Å–æ—Ç–µ 5 –º–µ—Ç—Ä–æ–≤
  2.0        // —à–∏—Ä–∏–Ω–∞ –∑–æ–Ω—ã –ø–µ—Ä–µ—Ö–æ–¥–∞ 2 –º–µ—Ç—Ä–∞
)

const gradientResult = await sceneApi.createProceduralLayer({
  world: { width: 120, depth: 120, edgeFade: 0.05 },
  base: { 
    seed: 5000, 
    octaveCount: 3, 
    amplitude: 6, 
    persistence: 0.5, 
    width: 40, 
    height: 40 
  },
  pool: { recipes: [] },
  seed: 5000
}, { 
  name: '–î–≤—É—Ö—Ü–≤–µ—Ç–Ω—ã–π –≥—Ä–∞–¥–∏–µ–Ω—Ç',
  multiColor: simpleGradient
})

console.log('üåä‚ùÑÔ∏è –î–≤—É—Ö—Ü–≤–µ—Ç–Ω—ã–π –≥—Ä–∞–¥–∏–µ–Ω—Ç —Å–æ–∑–¥–∞–Ω:', gradientResult)

console.log('üé® –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...')

// –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω—ã–º–∏ —Ü–≤–µ—Ç–∞–º–∏
const customColors = ['#8b4513', '#daa520', '#9acd32', '#228b22', '#4682b4']
const customNames = ['–ü—É—Å—Ç—ã–Ω—è', '–°—Ç–µ–ø—å', '–õ—É–≥–∞', '–õ–µ—Å', '–û–∑–µ—Ä–∞']

const customConfig = multiColorApi.createCustomConfig(
  'height',
  customColors,
  0,     // –º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –≤—ã—Å–æ—Ç–∞
  20,    // –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –≤—ã—Å–æ—Ç–∞
  1.2,   // —à–∏—Ä–∏–Ω–∞ –ø–µ—Ä–µ—Ö–æ–¥–∞
  customNames
)

const customResult = await sceneApi.createProceduralLayer({
  world: { width: 160, depth: 160, edgeFade: 0.1 },
  base: { 
    seed: 6000, 
    octaveCount: 4, 
    amplitude: 10, 
    persistence: 0.45, 
    width: 64, 
    height: 64 
  },
  pool: {
    recipes: [
      { 
        kind: 'hill', 
        count: [6, 9], 
        placement: { type: 'random' }, 
        radius: [8, 15], 
        intensity: [2, 6]
      }
    ]
  },
  seed: 6000
}, { 
  name: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –ª–∞–Ω–¥—à–∞—Ñ—Ç',
  multiColor: customConfig
})

console.log('üé≠ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –ª–∞–Ω–¥—à–∞—Ñ—Ç —Å–æ–∑–¥–∞–Ω:', customResult)

console.log('‚úÖ –í—Å–µ –º–Ω–æ–≥–æ—Ü–≤–µ—Ç–Ω—ã–µ –ª–∞–Ω–¥—à–∞—Ñ—Ç—ã —Å–æ–∑–¥–∞–Ω—ã!')
console.log('üí° –°–æ–≤–µ—Ç: –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Ä–∞–∑–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã blendWidth –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–µ–∑–∫–æ—Å—Ç–∏ –ø–µ—Ä–µ—Ö–æ–¥–æ–≤')
console.log('üîß –î–æ—Å—Ç—É–ø–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã: height (–≤—ã—Å–æ—Ç–∞), slope (–Ω–∞–∫–ª–æ–Ω), curvature (–∫—Ä–∏–≤–∏–∑–Ω–∞)')`
}