/**
 * –û—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–ª Express —Å–µ—Ä–≤–µ—Ä–∞ –¥–ª—è Agent Tasks UI
 * –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç REST API –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–≥–µ–Ω—Ç—Å–∫–∏–º–∏ –∑–∞–¥–∞—á–∞–º–∏
 */

import express from 'express'
import cors from 'cors'
import helmet from 'helmet'
import tasksRouter from './routes/tasks'
import epicsRouter from './routes/epics'
import managerRouter from './routes/manager'

const app = express()
const PORT = process.env.PORT || 3002

// Middleware
app.use(helmet())
app.use(cors())
app.use(express.json())

// –ë–∞–∑–æ–≤—ã–π —Ä–æ—É—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏
app.get('/api/health', (req, res) => {
  res.json({ 
    status: 'ok', 
    timestamp: new Date().toISOString(),
    service: 'Agent Tasks UI Backend'
  })
})

// API —Ä–æ—É—Ç—ã
app.use('/api/tasks', tasksRouter)
app.use('/api/epics', epicsRouter)
app.use('/api/manager', managerRouter)

// –û–±—Ä–∞–±–æ—Ç–∫–∞ 404 –¥–ª—è API —Ä–æ—É—Ç–æ–≤
app.use('/api/*', (req, res) => {
  res.status(404).json({
    success: false,
    error: 'API endpoint –Ω–µ –Ω–∞–π–¥–µ–Ω',
    path: req.path
  })
})

// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
app.listen(PORT, () => {
  console.log(`üöÄ Agent Tasks UI Backend –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`)
  console.log(`üìä Health check: http://localhost:${PORT}/api/health`)
  console.log(`üìã API endpoints:`)
  console.log(`   GET /api/tasks - –ø–æ–ª—É—á–∏—Ç—å –≤—Å–µ –∑–∞–¥–∞—á–∏`)
  console.log(`   GET /api/tasks/:id - –ø–æ–ª—É—á–∏—Ç—å –∑–∞–¥–∞—á—É –ø–æ ID`)
  console.log(`   GET /api/epics - –ø–æ–ª—É—á–∏—Ç—å –≤—Å–µ —ç–ø–∏–∫–∏`)
  console.log(`   GET /api/epics/:id - –ø–æ–ª—É—á–∏—Ç—å —ç–ø–∏–∫ –ø–æ ID`)
  console.log(`   GET /api/epics/:id/tasks - –ø–æ–ª—É—á–∏—Ç—å –∑–∞–¥–∞—á–∏ —ç–ø–∏–∫–∞`)
  console.log(`   GET /api/manager - –ø–æ–ª—É—á–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –º–µ–Ω–µ–¥–∂–µ—Ä–∞`)
})